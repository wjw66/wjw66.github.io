<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 首页</title>
    <link>https://wjw66.github.io/posts/</link>
    <description>Recent content in Posts on 首页</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 15 Aug 2019 09:50:41 +0800</lastBuildDate>
    
	<atom:link href="https://wjw66.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>IDEA如何导入运行已完成的项目</title>
      <link>https://wjw66.github.io/2019/idea%E5%A6%82%E4%BD%95%E5%AF%BC%E5%85%A5%E8%BF%90%E8%A1%8C%E5%B7%B2%E5%AE%8C%E6%88%90%E7%9A%84%E9%A1%B9%E7%9B%AE/</link>
      <pubDate>Thu, 15 Aug 2019 09:50:41 +0800</pubDate>
      
      <guid>https://wjw66.github.io/2019/idea%E5%A6%82%E4%BD%95%E5%AF%BC%E5%85%A5%E8%BF%90%E8%A1%8C%E5%B7%B2%E5%AE%8C%E6%88%90%E7%9A%84%E9%A1%B9%E7%9B%AE/</guid>
      <description>首先：Open打开自己解压好的项目 先创建自己的项目然后用Module的方式打开也可以（配置过程大致相同）  选择项目：  配置项目结构  配置过程（看图）  配置modules 配置Sources文件  配置依赖jar包  找到项目的lib文件，然后点OK  配置Tomcat的Library弹出的对话框中选择自己的Tomcat版本，例如我的是8.5.31  配置Artifacts   配置Tomcat服务器（必须完成Artifacts配置才能成功配置Tomcat） 完成后点OK   至此简单的项目就配置完成了！点击运行启动服务器吧 说明：如果网页出现404一般是项目的路径不正确，在Tomcat中重新更改下项目路径即可</description>
    </item>
    
    <item>
      <title>String类型为什么不可变</title>
      <link>https://wjw66.github.io/2019/string%E7%B1%BB%E5%9E%8B%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%8D%E5%8F%AF%E5%8F%98/</link>
      <pubDate>Wed, 14 Aug 2019 23:22:58 +0800</pubDate>
      
      <guid>https://wjw66.github.io/2019/string%E7%B1%BB%E5%9E%8B%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%8D%E5%8F%AF%E5%8F%98/</guid>
      <description>String类概述 java.lang.String类代表字符串。Java程序中所有的字符串文字（例如&amp;rdquo;abc&amp;rdquo; ）都可以被看作是实现此类的实例。 类 String 中包括用于检查各个字符串的方法，比如用于比较字符串，搜索字符串，提取子字符串以及创建具有翻译为大写或小写的所有字符的字符串的副本。
String类特点  字符串不变：字符串的值在创建后不能被更改。
String s1 = &amp;quot;abc&amp;quot;; s1 += &amp;quot;d&amp;quot;; System.out.println(s1); //输出 &amp;quot;abcd&amp;quot;  说明: 内存中有&amp;rdquo;abc&amp;rdquo;，&amp;rdquo;abcd&amp;rdquo;两个对象，s1从指向&amp;rdquo;abc&amp;rdquo;，改变指向，指向了&amp;rdquo;abcd&amp;rdquo;；说明s1指向的内存地址改变了，但内存中&amp;rdquo;abc&amp;rdquo;对象依旧存在，只是在运算的时候又&amp;rdquo;new&amp;rdquo;了一个&amp;rdquo;abcd&amp;rdquo;对象。
 因为String对象是不可变的（为什么不可变？下文会一一解惑），所以它们可以被共享。
String s1 = &amp;quot;abc&amp;quot;; String s2 = &amp;quot;abc&amp;quot;; // 内存中只有一个&amp;quot;abc&amp;quot;对象被创建，同时被s1和s2共享。  &amp;ldquo;abc&amp;rdquo; 等效于 char[] data={ &amp;lsquo;a&amp;rsquo; , &amp;lsquo;b&amp;rsquo; , &amp;lsquo;c&amp;rsquo; } 。
例如： String str = &amp;quot;abc&amp;quot;; 相当于： char data[] = {&#39;a&#39;, &#39;b&#39;, &#39;c&#39;}; String str = new String(data);  &amp;ensp;&amp;ensp;说明： String底层是靠字符数组char[]实现的。
  String对象为什么是不可变的？ public final class String implements java.</description>
    </item>
    
    <item>
      <title>JDK源码阅读顺序</title>
      <link>https://wjw66.github.io/2019/jdk%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB%E9%A1%BA%E5%BA%8F/</link>
      <pubDate>Wed, 13 Mar 2019 16:00:42 +0800</pubDate>
      
      <guid>https://wjw66.github.io/2019/jdk%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB%E9%A1%BA%E5%BA%8F/</guid>
      <description>标题为包名，后面序号为优先级1-4，优先级递减，建议按优先级顺序看
1、java.lang 1) Object 1 2) String 1 3) AbstractStringBuilder 1 4) StringBuffer 1 5) StringBuilder 1 6) Boolean 2 7) Byte 2 8) Double 2 9) Float 2 10) Integer 2 11) Long 2 12) Short 2 13) Thread 2 14) ThreadLocal 2 15) Enum 3 16) Throwable 3 17) Error 3 18) Exception 3 19) Class 4 20) ClassLoader 4 21) Compiler 4 22) System 4 23) Package 4 24) Void 4  2、java.</description>
    </item>
    
    <item>
      <title>Hugo的基本用法和页面改造</title>
      <link>https://wjw66.github.io/1/hugo%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95%E5%92%8C%E9%A1%B5%E9%9D%A2%E6%94%B9%E9%80%A0/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wjw66.github.io/1/hugo%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95%E5%92%8C%E9%A1%B5%E9%9D%A2%E6%94%B9%E9%80%A0/</guid>
      <description>概念 hugo是由Go语言实现的静态网站生成器。简单、易用、高效、易扩展、快速部署。
主要用于个人Blog、项目文档、初创公司站点构建。
hugo的下载安装很简单，可以参考官方的quickstart，本文主要介绍一下hugo框架的基本概念和工作原理。
目录结构 命令：hugo new site blog
blog ├── archetypes ├── config.toml ├── content ├── data ├── layouts ├── static ├── themes └── public archetypes  在通过命令窗口hugo new xxx 创建内容页面的时候，默认情况下hugo会创建date、title等front matter，可以通过在archetypes目录下创建文件，设置自定义的front matter。
config.toml
所有的hugo站点都有一个全局配置文件，用来配置整个站点的信息，hugo默认提供了跟多配置指令。
content
站点下所有的内容页面，也就是我们创建的md文件都在这个content目录下面。
data
data目录用来存储网站用到一些配置、数据文件。文件类型可以是yaml|toml|json等格式。
layouts
存放用来渲染content目录下面内容的模版文件，模版.html格式结尾，layouts可以同时存储在项目目录和themes//layouts目录下。
static
用来存储图片、css、js等静态资源文件。
themes
用来存储主题，主题可以方便的帮助我们快速建立站点，也可以方便的切换网站的风格样式。
public
hugo编译后生成网站的所有文件都存储在这里面，把这个目录放到任意web服务器就可以发布网站成功。
页面绑定 Page bundles** hugo中的内容组织是依赖Page Bundles来管理的。Page Bundles包括Leaf Bundle（没有子节点）和Branch Bundle（home page, section, taxonomy terms, taxonomy list）两类。
Leaf Bundle Branch Bundle 索引文件 index.md _index.md 布局类型 single list 嵌套 不允许嵌套 允许Leaf或Branch Bundle嵌套 Section section是基于content/目录下的组织结构定义的页面集合。</description>
    </item>
    
  </channel>
</rss>